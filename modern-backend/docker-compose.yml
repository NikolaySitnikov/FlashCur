version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: flashcur
      POSTGRES_USER: flashcur_user
      POSTGRES_PASSWORD: flashcur_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U flashcur_user -d flashcur" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  api:
    build: .
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://flashcur_user:flashcur_password@postgres:5432/flashcur
      - REDIS_URL=redis://redis:6379/0
      - BINANCE_API_BASE=https://api.binance.com
      - DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker for background tasks
  worker:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://flashcur_user:flashcur_password@postgres:5432/flashcur
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app
    command: celery -A app.worker worker --loglevel=info

  # Celery Beat for scheduled tasks
  beat:
    build: .
    environment:
      - DATABASE_URL=postgresql+asyncpg://flashcur_user:flashcur_password@postgres:5432/flashcur
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app
    command: celery -A app.worker beat --loglevel=info

  # Flower for Celery monitoring
  flower:
    build: .
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
    volumes:
      - ./app:/app
    command: celery -A app.worker flower --port=5555

volumes:
  postgres_data:
  redis_data:
