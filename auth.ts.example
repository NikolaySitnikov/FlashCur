import NextAuth from 'next-auth'
import { PrismaAdapter } from '@auth/prisma-adapter'
import prisma from '@/lib/prisma'

/**
 * NextAuth.js v5 Configuration for VolSpike
 * 
 * Key changes from v4:
 * - Configuration is now in root auth.ts instead of route handlers
 * - Adapters moved to @auth/prisma-adapter scope
 * - Using JWT strategy recommended for better Next.js 15 compatibility
 * - Exports: { handlers, auth, signIn, signOut }
 */
export const { handlers, auth, signIn, signOut } = NextAuth({
  adapter: PrismaAdapter(prisma),
  providers: [
    // Add your OAuth providers here
    // Example:
    // GitHub({
    //   clientId: process.env.AUTH_GITHUB_ID,
    //   clientSecret: process.env.AUTH_GITHUB_SECRET,
    // }),
    // Google({
    //   clientId: process.env.AUTH_GOOGLE_ID,
    //   clientSecret: process.env.AUTH_GOOGLE_SECRET,
    // }),
  ],
  pages: {
    signIn: '/auth/signin',
    error: '/auth/error',
  },
  // Use JWT strategy for better Next.js compatibility
  session: {
    strategy: 'jwt',
  },
  // JWT configuration
  jwt: {
    maxAge: 30 * 24 * 60 * 60, // 30 days
  },
  callbacks: {
    /**
     * Called whenever JWT is created or updated
     */
    async jwt({ token, user, trigger, session }) {
      if (user) {
        token.id = user.id
      }
      if (trigger === 'update' && session) {
        token = { ...token, ...session }
      }
      return token
    },
    /**
     * Called whenever session is checked
     */
    async session({ session, token }) {
      if (session.user) {
        session.user.id = token.id as string
        // Add any custom user properties from token here
      }
      return session
    },
  },
  events: {
    async signIn({ user, account, profile, isNewUser }) {
      console.log(`User ${user.email} signed in`)
    },
    async signOut() {
      console.log('User signed out')
    },
  },
})

/**
 * API route handlers for NextAuth
 * 
 * Usage in app/api/auth/[...nextauth]/route.ts:
 * 
 * export { handlers as GET, handlers as POST }
 * export const runtime = 'nodejs'
 */
